#!/bin/bash

APP_ROOT=$(cd $(dirname $0)/..; pwd);
CLASSPATH=`grep classpath $APP_ROOT/lib/build.properties | sed -e 's/.*=//g' | sed 's/\\\\//g'`
DEPLOYABLE_ARTIFACT=`grep deployable.artifact $APP_ROOT/lib/build.properties | sed -e 's/.*=//g'`
CONFIG_HOST=`grep InstanceConfig_default_routesHost $APP_ROOT/config/instance.properties | sed -e 's/.*=//g'`
CONFIG_PORT=`grep InstanceConfig_default_routesPort $APP_ROOT/config/instance.properties | sed -e 's/.*=//g'`
INSTANCE_KEY=`grep InstanceConfig_default_instanceKey $APP_ROOT/config/instance.properties | sed -e 's/.*=//g'`
INSTANCE_VERSION=`grep InstanceConfig_default_version $APP_ROOT/config/instance.properties | sed -e 's/.*=//g'`

function build_plugin_classpath() {
    CP=""
    for JAR in $APP_ROOT/plugin-lib/*.*; do
      if [ "${CP}x" != "x" ]; then
        CP="${CP}:"
      fi
      CP="${CP}${JAR}"
    done
    echo $CP
}

echo "Generating default config..."
PLUGIN_CLASSPATH=$(build_plugin_classpath)
cd $APP_ROOT && $JAVA_HOME/bin/java \
  -cp ${DEPLOYABLE_ARTIFACT}:${CLASSPATH}:${PLUGIN_CLASSPATH} \
  com.jivesoftware.os.routing.bird.deployable.config.extractor.ConfigExtractor \
  ${CONFIG_HOST} ${CONFIG_PORT} \
  ${INSTANCE_KEY} ${INSTANCE_VERSION} \
  /upenaConfig/set /upenaConfig/get com.jivesoftware

echo "Generated default config"
